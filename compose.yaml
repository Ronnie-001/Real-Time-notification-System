version: '3.8'

name: kent-notifier

services:
# ------------------------------------LOGIN SERVICE AND DATABASE----------------------------------

  login-service:
    build: ./services/login-service/app/
    ports:
      - 8000:8000
    env_file:
      - "./.env"
    environment:
      SPRING_DATASOURCE_URL: ${USER_DB_CONN_STRING}
    depends_on:
      - login-service-db

  login-service-db:
    image: postgres:17-alpine 
    ports:
      - 5432:5432 
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_USER_DB}
    volumes:
      - login-service-vol:/var/lib/postgres/data

# ------------------------------------------------------------------------------------------------

# ----------------------------------SCRAPING SERVICE AND DATABASE---------------------------------
  scraping-service:
    build: ./services/scraping-service/
    ports:
      - 8001:8001
    env_file:
        - "./.env"
    environment:
      DATABASE_URL: ${SCRAPING_DB_CONN_STRING}
    depends_on:
      scraping-service-db:
        condition: service_healthy
        restart: true

  scraping-service-db:
    image: postgres:17-alpine
    ports:
      - 5433:5432
    env_file:
      - "./.env"
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_SCRAPING_DB}
    volumes:
      - scraping-service-vol:/var/lib/postgres/data
    # Perform healthcheck on the PostgresSQL database to make sure we can connect to in within our service.
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_SCRAPING_DB}"]
      interval: 10s
      retries: 5
      start_period: 30s
      timeout: 10s

# ------------------------------------------------------------------------------------------------

# ----------------------------------------API GATEWAY---------------------------------------------

  krakend: 
    image: krakend 
    ports:
      - "8080:8080" 
    volumes:
      # bind the kraken.json config file & the jwk.txt file to the volume.
      - ./krakend.json:/etc/krakend/krakend.json
      - ./jwk.txt:/etc/krakend/jwk.txt
    depends_on:
      - login-service
      - scraping-service

# ------------------------------------------------------------------------------------------------

# ------------------------------------------VOLUMES-----------------------------------------------

volumes:
  login-service-vol:
  scraping-service-vol:
